class Solution {
    public String minWindow(String s, String t) {
        int ans = Integer.MAX_VALUE;
        int n = s.length();
        int i = 0, j = 0;
        int start = 0;
        Map<Character, Integer> map = new HashMap<>();
        for(char ch: t.toCharArray()){
            map.put(ch, map.getOrDefault(ch, 0)+1);
        }
        int count = map.size();
        while(j<n){
            char curr = s.charAt(j);
            if(map.containsKey(curr)){
                map.put(curr, map.get(curr)-1);
                if(map.get(curr) == 0){
                    count--;
                }
            }
            if(count == 0){
                while(i<=j && count == 0){
                    char remove = s.charAt(i);
                    if(map.containsKey(remove)){
                        map.put(remove, map.get(remove)+1);
                        if(map.get(remove) == 1){
                            count++;
                        }
                    }
                    i++;
                }
                if(j-i+2 < ans){
                    ans = j-i+2;
                    start = i-1;
                }
            }
            j++;
        }
        System.out.println(ans);
        return ans == Integer.MAX_VALUE ? "" : s.substring(start, start + ans);
    }
}
